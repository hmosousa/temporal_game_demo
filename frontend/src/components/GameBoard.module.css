.boardContainer {
  padding: 1.5rem;
  background-color: #f9f9f9;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.gridContainer {
  margin-top: 1rem;
  overflow-x: auto;
  flex-grow: 1;
  border-radius: 6px;
  display: flex;
  justify-content: center;
}

.gridTable {
  border-collapse: separate;
  border-spacing: 2px;
  min-width: 400px;
  margin: 0 auto;
}

.gridTable th, .gridTable td {
  border: 1px solid #e0e0e0;
  padding: 0.5rem;
  text-align: center;
  font-size: 0.9rem;
  /* background-color: white; */
}

.gridTable th {
  background-color: #f5f5f5;
  font-weight: 600;
  position: sticky;
  top: 0;
  z-index: 10;
}

.entityLabel {
  font-weight: 600;
  white-space: nowrap;
  font-size: 0.8rem;
}

.rowEntityLabel {
  composes: entityLabel;
  height: 40px; /* Same as grid cell height */
  width: 150px; /* Width for the row labels */
  vertical-align: middle;
  text-align: right;
  padding-right: 10px;
  display: flex; /* Add flex display */
  justify-content: flex-end; /* Right align content */
  align-items: center; /* Center vertically */
}

.rowEntityLabel .endpointDisplay {
  justify-content: flex-end;
  margin-left: auto;
}

.columnEntityLabel {
  composes: entityLabel;
  width: 40px; /* Same as grid cell width */
  height: 150px; /* Give more space for the rotated text */
  position: relative;
  text-align: left;
}

.columnEntityLabel .endpointDisplay {
  transform: rotate(-90deg);
  position: absolute;
  left: 0;
  right: 0;
  white-space: nowrap;
  display: flex;
  justify-content: flex-start;
  margin-left: 0;
  margin-top: auto;
  bottom: 20px;
}

.gridCell {
  width: 40px;
  height: 40px;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s;
  font-weight: bold;
  position: relative;
  background-color: white;
  border: 1px solid #e0e0e0;
}

.gridCell:hover:not(.disabled) {
  background-color: #e8f5e9;
}

/* Style for cells with active relations */
.active {
  font-weight: bold;
  color: black;
  opacity: 1 !important; /* Force visibility */
  visibility: visible !important; /* Force visibility */
}

/* Grid cells with specific relations */
.gridCell[data-relation="<"],
.gridCell[data-relation=">"],
.gridCell[data-relation="="],
.gridCell[data-relation="-"] {
  opacity: 1 !important; /* Force visibility */
  visibility: visible !important; /* Force visibility */
}

.selected {
  background-color: #f0f0f0;
  box-shadow: 0 0 0 2px #2196F3;
}

.disabled {
  opacity: 0;
  pointer-events: none;
  cursor: default;
}

.endpointDisplay {
  display: flex;
  align-items: baseline;
  justify-content: center;
  gap: 1px;
}

.endpointType {
  font-size: 0.7rem;
  color: #666;
  font-weight: bold;
}

.entityTextDisplay {
  font-size: 0.85rem;
}

.relationOptions {
  display: flex;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  height: 100%;
}

.relationOption {
  font-size: 0.9rem;
  font-weight: bold;
  width: 25%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.relationOption:nth-child(1) {
  color: #2196F3;
}

.relationOption:nth-child(2) {
  color: #FF9800;
}

.relationOption:nth-child(3) {
  color: #9C27B0;
}

.relationOption:nth-child(4) {
  color: #607D8B;
}

.relationOption:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.relationPopup {
  z-index: 100;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}

.relationPopup::before {
  content: '';
  position: absolute;
  top: -8px;
  left: 20px;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-bottom: 8px solid white;
}

.relationOptions {
  display: flex;
  flex-direction: column;
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  position: relative;
  z-index: 2;
  min-width: 140px;
}

.relationOption {
  padding: 10px 15px;
  border: none;
  background-color: transparent;
  text-align: left;
  cursor: pointer;
  transition: background-color 0.2s;
  margin: 0;
  border-radius: 0;
  font-weight: normal;
}

.relationOption:hover {
  background-color: #f5f5f5;
}

.relationOption:nth-child(1) {
  color: #2196F3;
  border-left: 4px solid #2196F3;
}

.relationOption:nth-child(2) {
  color: #FF9800;
  border-left: 4px solid #FF9800;
}

.relationOption:nth-child(3) {
  color: #9C27B0;
  border-left: 4px solid #9C27B0;
}

.relationOption:nth-child(4) {
  color: #607D8B;
  border-left: 4px solid #607D8B;
}

.popupBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 99;
}

/* Add these new styles for the horizontal popup */
.horizontalPopup {
  display: flex;
  flex-direction: row;
  background-color: white;
  border-radius: 4px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  z-index: 100;
  overflow: hidden;
}

.popupOption {
  width: 40px; /* Same as grid cell width */
  height: 40px; /* Same as grid cell height */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border: none;
  font-weight: bold;
  font-size: 1.2rem;
  transition: all 0.1s ease;
  padding: 0;
  margin: 0;
  background-color: white;
}

.popupOption:hover {
  transform: scale(1.05);
}

.beforeOption {
  color: black;
  background-color: #2196F3; /* Original blue */
}

.afterOption {
  color: black;
  background-color: #FF9800; /* Original orange */
}

.equalOption {
  color: black;
  background-color: #9C27B0; /* Original purple */
}

.unknownOption {
  color: black;
  background-color: #607D8B; /* Original gray */
}

/* Override global button styles */
.popupOption {
  border-radius: 0;
}

/* Add relation type specific background colors */
.gridCell[data-relation="<"] {
  background-color: rgba(33, 150, 243, 0.3); /* Light blue for "before" */
}

.gridCell[data-relation=">"] {
  background-color: rgba(255, 152, 0, 0.3); /* Light orange for "after" */
}

.gridCell[data-relation="="] {
  background-color: rgba(156, 39, 176, 0.3); /* Light purple for "equal" */
}

.gridCell[data-relation="-"] {
  background-color: rgba(96, 125, 139, 0.3); /* Light gray for "unknown" */
}
